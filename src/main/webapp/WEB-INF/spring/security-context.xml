<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- password 암호화 652쪽 -->
	<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	
	<!-- HTTP : 요청과 응답에 대한 설정 -->
	<security:http>
		<!-- 사이트 간 요청위조 방지 token 설정 -->
		<security:csrf disabled="true"/>
		<!-- 로그인 화면 : login-page="/member/login" -->
		<!-- 기본 이동창 : default-target-url="/board/list" -->
		<security:form-login login-page="/member/login" always-use-default-target="true" default-target-url="/board/list" />
		<security:logout logout-success-url="/board/list"/>
		<!-- 로그인 상태 유지 -->
		<security:remember-me />
		
		<!-- access 특정경로 이동 캐치 (책 673~674) -->
		<!-- 해당 경로 진입시 로그인 창으로 이동됨 -->
		<!-- 게시글 create, update, delete -->
		<security:intercept-url pattern="/board/insert" access="isAuthenticated()"/>
		<security:intercept-url pattern="/board/modify" access="isAuthenticated()"/>
		<security:intercept-url pattern="/board/remove" access="isAuthenticated()"/>
		
		<!-- 댓글 create, update, delete -->
		<security:intercept-url pattern="/reply/insert" access="isAuthenticated()"/>
		<security:intercept-url pattern="/reply/modify" access="isAuthenticated()"/>
		<security:intercept-url pattern="/reply/remove" access="isAuthenticated()"/>
		
		<!-- 회원 목록은 관리자만 볼 수 있도록 -->
		<security:intercept-url pattern="/member/list" access="hasRole('ADMIN')"/>
		<!-- 회원 read, update, delete -->
		<security:intercept-url pattern="/member/get" access="isAuthenticated()"/>
		<security:intercept-url pattern="/member/remove" access="isAuthenticated()"/>
		<security:intercept-url pattern="/member/modify" access="isAuthenticated()"/>
	</security:http>
	
	<!-- 
	authentication manager 인증메니저 : 인증 관리자
	1. authenticate : 인증(로그인 가능/불가능 검증)
	2. authorization : 권한 -->
	<security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service 
				data-source-ref="dataSource" 
				users-by-username-query="
					SELECT id, password, 1
					FROM Member
					WHERE id = ?
				"
				authorities-by-username-query="
					SELECT memberId, role
					FROM Auth
					WHERE memberId = ?
				"
				/>
		</security:authentication-provider>
	</security:authentication-manager>
</beans>
